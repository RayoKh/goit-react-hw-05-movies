{"version":3,"file":"static/js/544.7b78de81.chunk.js","mappings":"qKAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAL,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAqC,OAA9BN,EAAQE,EAAAK,OAAA,QAAAC,IAAAN,EAAA,GAAAA,EAAA,GAAG,oBAAmBE,EAAAE,KAAA,EAChCG,MAAM,gCAADC,OACMV,GAChCV,GACA,KAAD,EAHa,KAARW,EAAQG,EAAAO,MAIDC,GAAG,CAADR,EAAAE,KAAA,eAAAF,EAAAS,OAAA,SACNZ,EAASa,QAAM,cAAAV,EAAAE,KAAA,EAEXS,QAAQC,OAAO,IAAIC,MAAM,YAAY,KAAD,SAAAb,EAAAS,OAAA,SAAAT,EAAAO,MAAA,wBAAAP,EAAAc,OAAA,GAAAnB,EAAA,KAClD,kBATgB,OAAAH,EAAAuB,MAAA,KAAAhB,UAAA,KAWjB,K,mGCjBaiB,EAAYC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2JAUrBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+FAQhBG,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAeO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0LAatBM,EAAUR,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,shB,2BCQjC,EAjCmB,SAAH3B,GAAoB,IAAdmC,EAAMnC,EAANmC,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAI,SAAUJ,IAEpBK,EAAAA,EAAAA,KAAChB,EAAS,CAAAiB,SACPN,EAAOO,KAAI,SAAAC,GAAqD,IAAlDC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAMC,EAAEH,EAAFG,GAAIC,EAAWJ,EAAXI,YAAaC,EAAYL,EAAZK,aAE3C,OACER,EAAAA,EAAAA,KAACZ,EAAI,CAAAa,UACHQ,EAAAA,EAAAA,MAACnB,EAAI,CAACoB,GAAE,WAAApC,OAAagC,GAAMK,MAAO,CAAEC,KAAMhB,GAAWK,SAAA,CAClDM,GACCP,EAAAA,EAAAA,KAAA,OAAKa,IAfL,gDAeoBN,EAAaO,IAAKT,KAEtCL,EAAAA,EAAAA,KAAA,OAAKa,IAfnB,uEAeoCC,IAAKT,EAAMU,MAAO,OAE1CN,EAAAA,EAAAA,MAAChB,EAAO,CAAAQ,SAAA,EACNQ,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CACGG,EACAC,MAEHI,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACED,EAAAA,EAAAA,KAACgB,EAAAA,IAAU,CAACC,KAAM,KACjBC,OAAOV,GAAcW,QAAQ,aAd3Bb,EAoBf,KAGN,C,8EC1BA,UAVA,WACE,IAAAc,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCzB,EAAM2B,EAAA,GAAEE,EAASF,EAAA,GAMxB,OAJAG,EAAAA,EAAAA,YAAU,YACRlE,EAAAA,EAAAA,GAAY,qBAAqBmE,MAAK,SAAAlE,GAAA,IAAGmE,EAAOnE,EAAPmE,QAAO,OAAOH,EAAUG,EAAQ,GAC3E,GAAG,KAEI3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACjC,OAAQA,GAC7B,C","sources":["api/fetchMovies.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYzIzZWM2ZTBmOTk4MzA3MDVhNWVhNjliYmJlYjVjZiIsInN1YiI6IjY1M2IxNjE2Y2M5NjgzMDE0ZWI4MjEwNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7UIYM47J3rkdAbKkVNX5uzNonb4kSFhc3JR75HbXij4',\n  },\n};\n\nconst fetchMovies = async (endPoint = 'trending/all/week') => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/${endPoint}`,\n    options\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return await Promise.reject(new Error(`Oops...`));\n};\n\nexport default fetchMovies;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  padding: 40px 0;\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Item = styled.li`\n  // padding: 16px 0;\n  position: relative;\n  img {\n    border-radius: 8px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: #414141;\n  font-weight: 400;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  &:hover div {\n    opacity: 1;\n  }\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  height: 90px;\n  background-color: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(10px);\n  border-radius: 0 0 8px 8px;\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: space-around;\n  align-items: center;\n  text-align: center;\n  opacity: 0;\n  transition: opacity 300ms ease;\n  p {\n    margin: 0;\n    padding: 0;\n    color: white;\n  }\n\n  div {\n    display: flex;\n    gap: 5px;\n    align-items: center;\n    color: white;\n  }\n`;\n","import React from 'react';\nimport { Content, Item, Link, MovieList } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\nimport { HiChartBar } from 'react-icons/hi';\n\nconst baseURL = 'https://image.tmdb.org/t/p/w220_and_h330_face';\nconst defaultImg =\n  'https://rcmi.fiu.edu/wp-content/uploads/sites/30/2018/02/no_user.png';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  console.log('movies', movies);\n  return (\n    <MovieList>\n      {movies.map(({ title, name, id, poster_path, vote_average }) => {\n        // {const year = release_date.split('-');}\n        return (\n          <Item key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {poster_path ? (\n                <img src={baseURL + poster_path} alt={name}></img>\n              ) : (\n                <img src={defaultImg} alt={name} width={200}></img>\n              )}\n              <Content>\n                <p>\n                  {title}\n                  {name}\n                </p>\n                <div>\n                  <HiChartBar size={20} />\n                  {Number(vote_average).toFixed(1)}\n                </div>\n              </Content>\n            </Link>\n          </Item>\n        );\n      })}\n    </MovieList>\n  );\n};\n\nexport default MoviesList;\n","import React, { useEffect, useState } from 'react';\nimport fetchMovies from '../../api/fetchMovies';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMovies('trending/all/week').then(({ results }) => setMovies(results));\n  }, []);\n\n  return <MoviesList movies={movies} />;\n}\n\nexport default Home;\n"],"names":["options","method","headers","accept","Authorization","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endPoint","response","_args","arguments","_context","prev","next","length","undefined","fetch","concat","sent","ok","abrupt","json","Promise","reject","Error","stop","apply","MovieList","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Link","NavLink","_templateObject3","Content","_templateObject4","movies","location","useLocation","console","log","_jsx","children","map","_ref2","title","name","id","poster_path","vote_average","_jsxs","to","state","from","src","alt","width","HiChartBar","size","Number","toFixed","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","then","results","MoviesList"],"sourceRoot":""}